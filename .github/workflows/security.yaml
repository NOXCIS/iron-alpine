name: Security

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight (UTC)
  workflow_dispatch:  # Allows manual triggering of the workflow
    inputs:
      trigger-build:
        description: 'Trigger a manual build and push'
        default: 'true'

jobs:
  dockerscan:
    name: Docker Scan
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code from the target branch
      - name: Checkout code from target branch
        uses: actions/checkout@v4
        with:
          ref: 'refs/heads/master'  # Replace 'amneziawg' with your desired branch name

      # Step 2: Set env to capture the latest release version
      - name: Set env
        id: vars
        run: echo ::set-output name=RELEASE_VERSION::$(git describe --match "[0-9]*.[0-9]*.[0-9]*" --tags $(git rev-list --tags --max-count=1))

      # Step 3: Log in to Docker Hub using secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Docker pull (now pulling from noxcis/hellpine:latest)
      - name: Docker pull
        run: docker pull "noxcis/hellpine:latest"

        
      # Step 6: Run vulnerability scanner using Trivy
      - name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'noxcis/hellpine:latest'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH,MEDIUM'

      # Step 7: Upload Trivy scan results to Security tab
      - name: Upload Trivy scan results to Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
